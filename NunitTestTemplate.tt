<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)\Test\unit\tSQLt\bin\Debug\tSQLt.dll" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ assembly name="$(TargetPath)" #>

<#@ output extension=".cs" #>

using NUnit.Framework;
using tSQLt;

namespace UserProfileService.SQLTests
{
    [SetUpFixture]
    public class SetUpFixture
    {
        public static TsqltClient TsqltClient = new TsqltClient();

        [SetUp]
        public void GlobalSetup()
        {
            TsqltClient.BootstrapCleanDataBase();
        }

        [TearDown]
        public void GlobalTeardown()
        {
//            TsqltClient.DropDataBase();
        }
    }
<#
var allTests = new tSQLt.TestFileParser(Host.ResolvePath("tests")).GetTests();
var testClassNames = allTests.Select(t => t.ClassName).Distinct();
foreach (string testClassName in testClassNames)
{
	var testCaseNames = allTests.Where(t => t.ClassName == testClassName);
#>

	[TestFixture]
	public class <#= testClassName #>
	{
<#
	foreach (var testCaseName in testCaseNames)    
	{
		var testMethodName = new StringBuilder(testCaseName.TestName)
			.Replace(" ", "_")
			.Replace("@", "")
			.Replace(",", "")
			.Replace("-", "")
			.ToString();
#>
		[Test]
		public void <#= testMethodName #>()
		{
			var testResult = SetUpFixture.TsqltClient.ExecuteTest("[<#= testClassName #>].[<#= testCaseName.TestName #>]");
			Assert.AreEqual(testResult.Result, tSQLt.TestStatus.Success, testResult.Msg);
		}
<#	
	} 
#>
	}
<#
}
#>
}
